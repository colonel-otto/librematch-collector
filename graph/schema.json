{"graph/schema.graphql":{"isBinary":false,"fileName":"graph/schema.graphql","originalFileName":"graph/schema.graphql","content":"# ------------------------------------------------------\n# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)\n# ------------------------------------------------------\n\n\"\"\"\nA date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.\n\"\"\"\nscalar DateTime\n\ntype LeaderboardRow {\n  drops: Int\n  last_match_time: DateTime\n  leaderboard_id: Int!\n  losses: Int\n  profile: Profile!\n  profile_id: Int\n  rank: Int\n  rating: Int\n  streak: Int\n  wins: Int\n}\n\ntype LeaderboardRowList {\n  leaderboard_rows: [LeaderboardRow!]!\n  total: Int!\n}\n\ntype Match {\n  finished: DateTime\n  leaderboard_id: Int\n  location: Int\n  match_id: Float!\n  name: String!\n  num_players: Int!\n  players: [Player!]!\n  replayed: Int\n  speed: Int\n  started: DateTime!\n}\n\ntype MatchList {\n  matches: [Match!]!\n  total: Int!\n}\n\nunion MatchOrMatchList = Match | MatchList\n\ntype Player {\n  civ: Int\n  color: Int\n  match_id: String!\n  profile: Profile!\n  profile_id: Int!\n  slot: Int!\n  team: Int\n  won: Boolean\n}\n\ntype Profile {\n  avatarhash: String\n  clan: String\n  country: String\n  last_match_time: DateTime\n  leaderboards: [LeaderboardRow!]!\n  name: String\n  profile_id: Float!\n  stats: [Stats!]!\n  steam_id: String\n}\n\ntype Query {\n  leaderboard_rows(count: Int!, leaderboard_id: Int!, search: String, start: Int!): LeaderboardRowList!\n  match(match_id: Float, match_uuid: String): Match!\n  matches(count: Int!, leaderboard_id: Int, profile_ids: [Int!]!, start: Int!): MatchList!\n  ongoingMatches: MatchList!\n  profile(profile_id: Int): Profile!\n}\n\ntype Stats {\n  allies: [StatsEntry!]!\n  civ: [StatsEntry!]!\n  leaderboard_id: Int!\n  location: [StatsEntry!]!\n  opponents: [StatsEntry!]!\n}\n\ntype StatsEntry {\n  civ: Int\n  country: String\n  games: Int!\n  location: Int\n  name: String\n  profile_id: Int\n  wins: Int!\n}\n\ntype Subscription {\n  lobbiesUpdatedSub: String!\n  matchStartedSub: Match!\n  matchSub(profile_id: Int): Match!\n  ongoingMatchesSub: MatchOrMatchList!\n  ongoingMatchesUpdatedSub: String!\n}\n"}}